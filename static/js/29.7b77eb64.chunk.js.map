{"version":3,"file":"static/js/29.7b77eb64.chunk.js","mappings":"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","sources":["components/cart/cartItem/CartItem.jsx","components/cart/Cart.jsx","utils/formatNumberAsPrice.js"],"sourcesContent":["import \"./CartItem.css\";\r\n\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  updateCart,\r\n  removeProductFromCart,\r\n} from \"../../../redux/slices/cartSlice\";\r\n\r\nimport formatNumberAsPrice from \"../../../utils/formatNumberAsPrice\";\r\n\r\nexport default function CartItem({ cartItemInfo }) {\r\n  const {\r\n    productId,\r\n    productName,\r\n    productImage,\r\n    productPrice,\r\n    productStock,\r\n    productQuantity,\r\n    productTotalPrice,\r\n    productDeliveryDate,\r\n  } = cartItemInfo;\r\n\r\n  const [cartCounter, setCartCounter] = useState(productQuantity);\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector((state) => state.cart);\r\n\r\n  let deliveryDate = new Date(productDeliveryDate).toDateString().split(\" \");\r\n  let deliveryDateDisplay = `${deliveryDate[0]} ${deliveryDate[1]} ${deliveryDate[2]}`;\r\n\r\n  function updateCartItem(cartProductInfo) {\r\n    dispatch(updateCart(cartProductInfo));\r\n  }\r\n\r\n  function removeCartItem() {\r\n    let cartProductInfo = {\r\n      productId,\r\n      productName,\r\n    };\r\n\r\n    dispatch(removeProductFromCart(cartProductInfo));\r\n  }\r\n\r\n  return (\r\n    <div className=\"cartItem\">\r\n      <div className=\"cartItem__imageBox\">\r\n        <img src={productImage} alt=\"item\" className=\"cartItem__image\" />\r\n      </div>\r\n      <div className=\"cartItem__info\">\r\n        <div className=\"cartItem__name\">{productName}</div>\r\n        <div className=\"cartItem__price\">\r\n          {formatNumberAsPrice(productTotalPrice)}\r\n        </div>\r\n        <div className=\"cartItem__counter\">\r\n          <button\r\n            className=\"cartItem__countButton\"\r\n            disabled={isLoading}\r\n            onClick={() => {\r\n              let newCartCount = cartCounter === 1 ? 1 : cartCounter - 1;\r\n              setCartCounter(newCartCount);\r\n\r\n              let cartProductInfo = {\r\n                productId,\r\n                productName,\r\n                productPrice,\r\n                productStock,\r\n                productQuantity: newCartCount,\r\n                productTotalPrice: productPrice * newCartCount,\r\n              };\r\n\r\n              updateCartItem(cartProductInfo);\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n          <div className=\"cartItem__count\">{productQuantity}</div>\r\n          <button\r\n            className=\"cartItem__countButton\"\r\n            disabled={isLoading}\r\n            onClick={() => {\r\n              let newCartCount =\r\n                cartCounter < productStock ? cartCounter + 1 : cartCounter;\r\n\r\n              setCartCounter(newCartCount);\r\n\r\n              let cartProductInfo = {\r\n                productId,\r\n                productName,\r\n                productPrice,\r\n                productStock,\r\n                productQuantity: newCartCount,\r\n                productTotalPrice: productPrice * newCartCount,\r\n              };\r\n\r\n              updateCartItem(cartProductInfo);\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n        <button\r\n          className=\"cartItem__removeButton\"\r\n          disabled={isLoading}\r\n          onClick={removeCartItem}\r\n        >\r\n          Remove\r\n        </button>\r\n      </div>\r\n      <div className=\"cartItem__deliveryInfo\">\r\n        Estimated Delivery by {deliveryDateDisplay}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./Cart.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCartThunk } from \"../../redux/slices/cartSlice\";\r\n\r\nimport formatNumberAsPrice from \"../../utils/formatNumberAsPrice\";\r\nimport CartItem from \"./cartItem/CartItem\";\r\n\r\nexport default function Cart() {\r\n  const { cartItems, cartTotal, cartItemsCount } = useSelector(\r\n    (state) => state.cart\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const { isAuthenticated } = useSelector((state) => state.user);\r\n  const navigate = useNavigate();\r\n\r\n  function addToCart() {\r\n    if (isAuthenticated && cartItemsCount !== 0)\r\n      dispatch(addToCartThunk(cartItems));\r\n\r\n    return navigate(\"/placeorder\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <div className=\"cart__heading\">CART</div>\r\n\r\n      <div className=\"cart__itemsList\">\r\n        <div className=\"cart__itemsListHeading\">My Cart Items</div>\r\n\r\n        {cartItems.length !== 0 ? (\r\n          cartItems.map((cartItem) => {\r\n            return (\r\n              <CartItem key={cartItem.productId} cartItemInfo={cartItem} />\r\n            );\r\n          })\r\n        ) : (\r\n          <div className=\"cart__noItemsInCart\">No items in cart!</div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"cart__total\">\r\n        <div className=\"cart__totalHeading\">Cart Total</div>\r\n        <div className=\"cart__totalAmount\">\r\n          {formatNumberAsPrice(cartTotal)}\r\n        </div>\r\n        <button\r\n          className=\"cart__placeOrderButton\"\r\n          disabled={cartItemsCount < 1 || !isAuthenticated}\r\n          onClick={addToCart}\r\n        >\r\n          {isAuthenticated ? \"Place Order\" : \"Login To Place Order\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default function formatNumberAsPrice(number) {\r\n  const priceFormatter = new Intl.NumberFormat(\"hi-in\", {\r\n    currency: \"INR\",\r\n    style: \"currency\",\r\n  });\r\n\r\n  return priceFormatter.format(number);\r\n}\r\n"],"names":["CartItem","_ref","cartItemInfo","productId","productName","productImage","productPrice","productStock","productQuantity","productTotalPrice","productDeliveryDate","_useState","useState","_useState2","_slicedToArray","cartCounter","setCartCounter","dispatch","useDispatch","isLoading","useSelector","state","cart","deliveryDate","Date","toDateString","split","deliveryDateDisplay","concat","updateCartItem","cartProductInfo","updateCart","_jsxs","className","children","_jsx","src","alt","formatNumberAsPrice","disabled","onClick","newCartCount","removeProductFromCart","Cart","_useSelector","cartItems","cartTotal","cartItemsCount","isAuthenticated","user","navigate","useNavigate","length","map","cartItem","addToCartThunk","number","Intl","NumberFormat","currency","style","format"],"sourceRoot":""}